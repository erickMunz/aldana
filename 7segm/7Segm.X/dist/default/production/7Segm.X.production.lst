

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Feb 28 21:13:57 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	dabs	1,0x7E,2
     8  0000                     
     9                           ; Version 1.45
    10                           ; Generated 16/11/2017 GMT
    11                           ; 
    12                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    13                           ; All rights reserved.
    14                           ; 
    15                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    16                           ; 
    17                           ; Redistribution and use in source and binary forms, with or without modification, are
    18                           ; permitted provided that the following conditions are met:
    19                           ; 
    20                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    21                           ;        conditions and the following disclaimer.
    22                           ; 
    23                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    24                           ;        of conditions and the following disclaimer in the documentation and/or other
    25                           ;        materials provided with the distribution.
    26                           ; 
    27                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    28                           ;        software without specific prior written permission.
    29                           ; 
    30                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    31                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    32                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    33                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    34                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    35                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    36                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    37                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    38                           ; 
    39                           ; 
    40                           ; Code-generator required, PIC16F887 Definitions
    41                           ; 
    42                           ; SFR Addresses
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  0007                     	;# 
    51  0008                     	;# 
    52  0009                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000D                     	;# 
    57  000E                     	;# 
    58  000E                     	;# 
    59  000F                     	;# 
    60  0010                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0013                     	;# 
    64  0014                     	;# 
    65  0015                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001B                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  001D                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  0081                     	;# 
    79  0085                     	;# 
    80  0086                     	;# 
    81  0087                     	;# 
    82  0088                     	;# 
    83  0089                     	;# 
    84  008C                     	;# 
    85  008D                     	;# 
    86  008E                     	;# 
    87  008F                     	;# 
    88  0090                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0093                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  0105                     	;# 
   107  0107                     	;# 
   108  0108                     	;# 
   109  0109                     	;# 
   110  010C                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  0185                     	;# 
   116  0187                     	;# 
   117  0188                     	;# 
   118  0189                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0008                     _PORTD	set	8
   122  0086                     _TRISB	set	134
   123  0088                     _TRISD	set	136
   124  0189                     _ANSELH	set	393
   125                           
   126                           ; #config settings
   127  0000                     
   128                           	psect	cinit
   129  07FC                     start_initialization:	
   130  07FC                     __initialization:	
   131  07FC                     end_of_initialization:	
   132                           ;End of C runtime variable initialization code
   133                           
   134  07FC                     __end_of__initialization:	
   135  07FC  0183               	clrf	3
   136  07FD  120A  118A  2FBB   	ljmp	_main	;jump to C main() function
   137                           
   138                           	psect	cstackCOMMON
   139  0070                     __pcstackCOMMON:	
   140  0070                     ?_main:	
   141  0070                     ??_main:	
   142                           ; 1 bytes @ 0x0
   143                           
   144  0070                     main@seg:	
   145                           ; 1 bytes @ 0x0
   146                           
   147                           
   148                           ; 1 bytes @ 0x0
   149  0070                     	ds	1
   150                           
   151                           	psect	maintext
   152  07BB                     __pmaintext:	
   153 ;;
   154 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   155 ;;
   156 ;; *************** function _main *****************
   157 ;; Defined at:
   158 ;;		line 5 in file "7segmentos.c"
   159 ;; Parameters:    Size  Location     Type
   160 ;;		None
   161 ;; Auto vars:     Size  Location     Type
   162 ;;  seg             1    0[COMMON] unsigned char 
   163 ;; Return value:  Size  Location     Type
   164 ;;                  1    wreg      void 
   165 ;; Registers used:
   166 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   167 ;; Tracked objects:
   168 ;;		On entry : B00/0
   169 ;;		On exit  : 0/0
   170 ;;		Unchanged: 0/0
   171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   172 ;;      Params:         0       0       0       0       0
   173 ;;      Locals:         1       0       0       0       0
   174 ;;      Temps:          0       0       0       0       0
   175 ;;      Totals:         1       0       0       0       0
   176 ;;Total ram usage:        1 bytes
   177 ;; This function calls:
   178 ;;		Nothing
   179 ;; This function is called by:
   180 ;;		Startup code after reset
   181 ;; This function uses a non-reentrant model
   182 ;;
   183                           
   184                           
   185                           ;psect for function _main
   186  07BB                     _main:	
   187                           
   188                           ;7segmentos.c: 6: unsigned char seg = 0;
   189                           
   190                           ;incstack = 0
   191                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   192  07BB  01F0               	clrf	main@seg
   193                           
   194                           ;7segmentos.c: 7: TRISD = 0x00;
   195  07BC  1683               	bsf	3,5	;RP0=1, select bank1
   196  07BD  1303               	bcf	3,6	;RP1=0, select bank1
   197  07BE  0188               	clrf	8	;volatile
   198                           
   199                           ;7segmentos.c: 8: TRISB = 0xF0;
   200  07BF  30F0               	movlw	240
   201  07C0  0086               	movwf	6	;volatile
   202                           
   203                           ;7segmentos.c: 9: ANSELH = 0;
   204  07C1  1683               	bsf	3,5	;RP0=1, select bank3
   205  07C2  1703               	bsf	3,6	;RP1=1, select bank3
   206  07C3  0189               	clrf	9	;volatile
   207                           
   208                           ;7segmentos.c: 11: switch (seg) {
   209                           
   210                           ;7segmentos.c: 10: while (1) {
   211  07C4  2FDB               	goto	l516
   212  07C5                     l494:	
   213                           ;7segmentos.c: 12: case 0:
   214                           
   215                           
   216                           ;7segmentos.c: 13: PORTD = 0x3F;
   217  07C5  303F               	movlw	63
   218  07C6  2FD8               	goto	L9
   219  07C7                     l496:	
   220                           ;7segmentos.c: 15: case 1:
   221                           
   222                           ;7segmentos.c: 14: break;
   223                           
   224                           
   225                           ;7segmentos.c: 16: PORTD = 0x06;
   226  07C7  3006               	movlw	6
   227  07C8  2FD8               	goto	L9
   228  07C9                     l498:	
   229                           ;7segmentos.c: 18: case 2:
   230                           
   231                           ;7segmentos.c: 17: break;
   232                           
   233                           
   234                           ;7segmentos.c: 19: PORTD = 0x5B;
   235  07C9  305B               	movlw	91
   236  07CA  2FD8               	goto	L9
   237  07CB                     l500:	
   238                           ;7segmentos.c: 21: case 3:
   239                           
   240                           ;7segmentos.c: 20: break;
   241                           
   242                           
   243                           ;7segmentos.c: 22: PORTD = 0x4F;
   244  07CB  304F               	movlw	79
   245  07CC  2FD8               	goto	L9
   246  07CD                     l502:	
   247                           ;7segmentos.c: 24: case 4:
   248                           
   249                           ;7segmentos.c: 23: break;
   250                           
   251                           
   252                           ;7segmentos.c: 25: PORTD = 0x66;
   253  07CD  3066               	movlw	102
   254  07CE  2FD8               	goto	L9
   255  07CF                     l504:	
   256                           ;7segmentos.c: 27: case 5:
   257                           
   258                           ;7segmentos.c: 26: break;
   259                           
   260                           
   261                           ;7segmentos.c: 28: PORTD = 0x6D;
   262  07CF  306D               	movlw	109
   263  07D0  2FD8               	goto	L9
   264  07D1                     l506:	
   265                           ;7segmentos.c: 30: case 6:
   266                           
   267                           ;7segmentos.c: 29: break;
   268                           
   269                           
   270                           ;7segmentos.c: 31: PORTD = 0x7D;
   271  07D1  307D               	movlw	125
   272  07D2  2FD8               	goto	L9
   273  07D3                     l508:	
   274                           ;7segmentos.c: 33: case 7:
   275                           
   276                           ;7segmentos.c: 32: break;
   277                           
   278                           
   279                           ;7segmentos.c: 34: PORTD = 0x4B;
   280  07D3  304B               	movlw	75
   281  07D4  2FD8               	goto	L9
   282  07D5                     l510:	
   283                           ;7segmentos.c: 36: case 8:
   284                           
   285                           ;7segmentos.c: 35: break;
   286                           
   287                           
   288                           ;7segmentos.c: 37: PORTD = 0xFF;
   289  07D5  30FF               	movlw	255
   290  07D6  2FD8               	goto	L9
   291  07D7                     l512:	
   292                           ;7segmentos.c: 39: case 9:
   293                           
   294                           ;7segmentos.c: 38: break;
   295                           
   296                           
   297                           ;7segmentos.c: 40: PORTD = 0x6B;
   298  07D7  306B               	movlw	107
   299  07D8                     L9:	
   300  07D8  1283               	bcf	3,5	;RP0=0, select bank0
   301  07D9  1303               	bcf	3,6	;RP1=0, select bank0
   302  07DA  0088               	movwf	8	;volatile
   303  07DB                     l516:	
   304                           ;7segmentos.c: 42: }
   305                           
   306                           ;7segmentos.c: 41: break;
   307                           
   308  07DB  0870               	movf	main@seg,w
   309                           
   310                           ; Switch size 1, requested type "space"
   311                           ; Number of cases is 10, Range of values is 0 to 9
   312                           ; switch strategies available:
   313                           ; Name         Instructions Cycles
   314                           ; simple_byte           31    16 (average)
   315                           ; direct_byte           38     8 (fixed)
   316                           ; jumptable            260     6 (fixed)
   317                           ;	Chosen strategy is simple_byte
   318  07DC  3A00               	xorlw	0	; case 0
   319  07DD  1903               	skipnz
   320  07DE  2FC5               	goto	l494
   321  07DF  3A01               	xorlw	1	; case 1
   322  07E0  1903               	skipnz
   323  07E1  2FC7               	goto	l496
   324  07E2  3A03               	xorlw	3	; case 2
   325  07E3  1903               	skipnz
   326  07E4  2FC9               	goto	l498
   327  07E5  3A01               	xorlw	1	; case 3
   328  07E6  1903               	skipnz
   329  07E7  2FCB               	goto	l500
   330  07E8  3A07               	xorlw	7	; case 4
   331  07E9  1903               	skipnz
   332  07EA  2FCD               	goto	l502
   333  07EB  3A01               	xorlw	1	; case 5
   334  07EC  1903               	skipnz
   335  07ED  2FCF               	goto	l504
   336  07EE  3A03               	xorlw	3	; case 6
   337  07EF  1903               	skipnz
   338  07F0  2FD1               	goto	l506
   339  07F1  3A01               	xorlw	1	; case 7
   340  07F2  1903               	skipnz
   341  07F3  2FD3               	goto	l508
   342  07F4  3A0F               	xorlw	15	; case 8
   343  07F5  1903               	skipnz
   344  07F6  2FD5               	goto	l510
   345  07F7  3A01               	xorlw	1	; case 9
   346  07F8  1903               	skipnz
   347  07F9  2FD7               	goto	l512
   348  07FA  2FDB               	goto	l516
   349  07FB  2FDB               	goto	l516
   350  07FC                     __end_of_main:	
   351  007E                     btemp	set	126	;btemp
   352  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1       1
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      1       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Feb 28 21:13:57 2018

                    l500 07CB                      l510 07D5                      l502 07CD  
                    l512 07D7                      l504 07CF                      l506 07D1  
                    l508 07D3                      l516 07DB                      l494 07C5  
                    l496 07C7                      l498 07C9                     _main 07BB  
                   btemp 007E                     start 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0070  
                 _ANSELH 0189  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 07BB                  main@seg 0070     end_of_initialization 07FC  
    start_initialization 07FC                ___latbits 0002   __CFG_FOSC$INTRC_CLKOUT 0000  
          __size_of_main 0041  
